(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{355:function(v,_,e){"use strict";e.r(_);var c=e(10),o=Object(c.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"监控"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#监控"}},[v._v("#")]),v._v(" 监控")]),v._v(" "),_("p",[v._v("对于代码运行错误，通常的办法是使用 "),_("code",[v._v("window.onerror")]),v._v(" 拦截报错。该方法能拦截到大部分的详细报错信息，但是也有例外")]),v._v(" "),_("ul",[_("li",[v._v("对于跨域的代码运行错误会显示 "),_("code",[v._v("Script error.")]),v._v(" 对于这种情况我们需要给 "),_("code",[v._v("script")]),v._v(" 标签添加 "),_("code",[v._v("crossorigin")]),v._v(" 属性")]),v._v(" "),_("li",[v._v("对于某些浏览器可能不会显示调用栈信息，这种情况可以通过 "),_("code",[v._v("arguments.callee.caller")]),v._v(" 来做栈递归")])]),v._v(" "),_("p",[v._v("对于异步代码来说，可以使用 "),_("code",[v._v("catch")]),v._v(" 的方式捕获错误。比如 "),_("code",[v._v("Promise")]),v._v(" 可以直接使用 "),_("code",[v._v("catch")]),v._v(" 函数，"),_("code",[v._v("async await")]),v._v(" 可以使用 "),_("code",[v._v("try catch")])]),v._v(" "),_("p",[v._v("但是要注意线上运行的代码都是压缩过的，需要在打包时生成 sourceMap 文件便于 debug。")]),v._v(" "),_("p",[v._v("对于捕获的错误需要上传给服务器，通常可以通过 "),_("code",[v._v("img")]),v._v(" 标签的 "),_("code",[v._v("src")]),v._v(" 发起一个请求。")])])}),[],!1,null,null,null);_.default=o.exports}}]);